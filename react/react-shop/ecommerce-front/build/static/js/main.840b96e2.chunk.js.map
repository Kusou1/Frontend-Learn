{"version":3,"sources":["helpers/auth.ts","components/core/Navigation.tsx","config.ts","components/core/Layout.tsx","components/core/ProductItem.tsx","helpers/cart.ts","store/actions/category.actions.ts","store/actions/product.actions.ts","components/core/Search.tsx","components/core/Home.tsx","components/core/CheckBox.tsx","helpers/price.ts","components/core/RadioBox.tsx","components/core/Shop.tsx","store/actions/auth.actions.ts","components/core/Signin.tsx","components/core/Signup.tsx","components/admin/Dashboard.tsx","components/admin/PrivateRoute.tsx","components/admin/AdminDashboard.tsx","components/admin/AdminRoute.tsx","components/admin/AddCategory.tsx","components/admin/AddProduct.tsx","components/core/Product.tsx","components/core/CartItemFc.tsx","components/core/TotalPrice.tsx","components/core/Pay.tsx","components/core/Cart.tsx","components/core/Success.tsx","Routes.tsx","store/reducers/auth.reducer.ts","store/reducers/category.reducer.ts","store/reducers/product.reducer.ts","store/reducers/index.ts","store/sagas/auth.saga.ts","store/sagas/category.saga.ts","store/sagas/product.saga.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["isAuth","jwt","localStorage","getItem","JSON","parse","useActive","currentPath","path","API","Navigation","pathname","useSelector","state","router","location","isHome","isShop","isSignin","isSignup","isDashboard","getDashboarUrl","url","user","role","mode","selectable","Item","className","to","Layout","children","title","subTitle","style","width","margin","process","Title","Typography","Paragraph","ProductItem","product","showViewProduct","showCartBtn","dispatch","useDispatch","addToCart","item","next","cart","window","push","count","Array","from","Set","map","_id","find","setItem","stringify","addItem","cover","src","alt","name","actions","buttonArray","type","onClick","showButtons","level","ellipsis","rows","description","span","sold","textAlign","price","moment","createdAt","format","category","GET_CATEGORY","GET_CATEGORY_SUCCESS","getCategory","GET_PRODUCT","GET_PRODUCT_SUCCESS","getProduct","sortBy","order","limit","getProductSuccess","payload","SEARCH_PRODUCT","SEARCH_PRODUCT_SUCCESS","FILTER_PRODUCT","FILTER_PRODUCT_SUCCESS","GET_PRODUCT_BY_ID","GET_PRODUCT_BY_ID_SUCCESS","getProductByIdSuccess","Search","search","useEffect","onFinish","value","layout","initialValues","Group","compact","Option","result","placeholder","htmlType","gutter","Home","products","Checkbox","handleFilter","options","label","onChange","checkedValue","prices","id","array","RadioBox","event","target","dataSource","renderItem","Shop","useState","skip","setSkip","myFilters","setMyFilter","filters","loadMore","size","direction","filter","data","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAIL","RESET_SIGNUP","signupFail","message","SIGNIN","SIGNIN_SUCCESS","SIGNIN_FAIL","signinFail","Signin","auth","signin","loaded","success","status","showError","redirectToDashboard","Password","Signup","Form","useForm","form","signup","resetFields","extra","showSuccess","Dashboard","PrivateRoute","Component","component","rest","render","props","AdminDashboard","email","ShoppingCartOutlined","UserOutlined","OrderedListOutlined","bordered","AdminRoute","AddCategory","setName","token","a","axios","post","headers","Authorization","response","error","addCategory","console","log","AddProduct","file","setFile","formData","FormData","attr","set","then","accept","beforeUpload","icon","UploadOutlined","addProductForm","Product","productId","useParams","CartItemFc","setCart","setCount","parseInt","forEach","index","updateItem","splice","deleteItem","danger","TotalPrice","setTotalPrice","getTotalPrice","reduce","currentValue","nextValue","toFixed","parseFloat","Pay","totalPrice","address","getPayUrl","totalAmount","subject","body","userId","href","Cart","setAddress","Success","Routes","exact","intialState","authReducer","action","initialState","categoryReducer","quantity","photo","shipping","productReducer","createRootReducer","history","combineReducers","connectRouter","hanleSignup","handleSignin","authSaga","put","takeEvery","handleGetCategory","categorySaga","get","handleGetProduct","handleSearchProduct","handleFilterProduct","handleGetProductById","productSaga","params","rootSaga","all","createHashHistory","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.840b96e2.chunk.js","sourcesContent":["import { Jwt } from \"../store/models/auth\"\n\nexport function isAuth(): boolean | Jwt {\n  const jwt = localStorage.getItem(\"jwt\")\n  if (jwt) return JSON.parse(jwt)\n  return false\n}\n","import { Menu } from \"antd\"\nimport React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { RouterState } from \"connected-react-router\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\nfunction useActive(currentPath: string, path: string): string {\n  return currentPath === path ? \"ant-menu-item-selected\" : \"\"\n}\n\nconst Navigation = () => {\n  const router = useSelector<AppState, RouterState>(state => state.router)\n  const pathname = router.location.pathname\n  const isHome = useActive(pathname, \"/\")\n  const isShop = useActive(pathname, \"/shop\")\n  const isSignin = useActive(pathname, \"/signin\")\n  const isSignup = useActive(pathname, \"/signup\")\n  const isDashboard = useActive(pathname, getDashboarUrl())\n\n  function getDashboarUrl() {\n    let url = \"/user/dashboard\"\n    if (isAuth()) {\n      const {\n        user: { role }\n      } = isAuth() as Jwt\n\n      if (role === 1) {\n        url = \"/admin/dashboard\"\n      }\n    }\n    return url\n  }\n\n  return (\n    <Menu mode=\"horizontal\" selectable={false}>\n      <Menu.Item className={isHome}>\n        <Link to=\"/\">首页</Link>\n      </Menu.Item>\n      <Menu.Item className={isShop}>\n        <Link to=\"/shop\">商城</Link>\n      </Menu.Item>\n      {!isAuth() && (\n        <>\n          <Menu.Item className={isSignin}>\n            <Link to=\"/signin\">登录</Link>\n          </Menu.Item>\n          <Menu.Item className={isSignup}>\n            <Link to=\"/signup\">注册</Link>\n          </Menu.Item>\n        </>\n      )}\n      {isAuth() && (\n        <Menu.Item className={isDashboard}>\n          <Link to={getDashboarUrl()}>dashboard</Link>\n        </Menu.Item>\n      )}\n    </Menu>\n  )\n}\n\nexport default Navigation\n","export let API: string\n\nif (process.env.NODE_ENV === \"development\") {\n  API = process.env.REACT_APP_DEVLOPMENT_API_URL!\n} else if (process.env.NODE_ENV === \"production\") {\n  API = process.env.REACT_APP_PRODUCTION_API_URL!\n}\n","import { PageHeader } from \"antd\"\nimport React, { FC } from \"react\"\nimport Navigation from \"./Navigation\"\n\ninterface Props {\n  children: React.ReactNode\n  title: string\n  subTitle: string\n}\n\nconst Layout: FC<Props> = ({ children, title, subTitle }) => {\n  return (\n    <div>\n      <Navigation />\n      <PageHeader className=\"jumbotron\" title={title} subTitle={subTitle} />\n      <div style={{ width: \"85%\", margin: \"0 auto\" }}>{children}</div>\n    </div>\n  )\n}\n\nexport default Layout\n","import { Button, Card, Col, Image, Row, Typography } from \"antd\"\nimport moment from \"moment\"\nimport React, { FC } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { API } from \"../../config\"\nimport { Product } from \"../../store/models/product\"\nimport { addItem } from \"../../helpers/cart\"\nimport { useDispatch } from \"react-redux\"\nimport { push } from \"connected-react-router\"\n\nconst { Title, Paragraph } = Typography\n\ninterface Props {\n  product: Product\n  showViewProduct?: boolean\n  showCartBtn?: boolean\n}\n\nconst ProductItem: FC<Props> = ({\n  product,\n  showViewProduct = true,\n  showCartBtn = true\n}) => {\n  const dispatch = useDispatch()\n\n  const addToCart = () => {\n    addItem(product, () => {\n      dispatch(push(\"/cart\"))\n    })\n  }\n\n  const showButtons = () => {\n    let buttonArray = []\n    if (showViewProduct)\n      buttonArray.push(\n        <Button type=\"link\">\n          <Link to={`/product/${product._id}`}>查看详情</Link>\n        </Button>\n      )\n    if (showCartBtn) {\n      buttonArray.push(\n        <Button type=\"link\" onClick={addToCart}>\n          加入购物车\n        </Button>\n      )\n    }\n    return buttonArray\n  }\n\n  return (\n    <Card\n      cover={\n        <Image\n          src={`${API}/product/photo/${product._id}`}\n          alt={product.name}\n        />\n      }\n      actions={showButtons()}\n    >\n      <Title level={5}>{product.name}</Title>\n      <Paragraph ellipsis={{ rows: 2 }}>{product.description}</Paragraph>\n      <Row>\n        <Col span=\"12\">销量: {product.sold}</Col>\n        <Col span=\"12\" style={{ textAlign: \"right\" }}>\n          价格: {product.price}\n        </Col>\n      </Row>\n      <Row>\n        <Col span=\"12\">\n          上架时间: {moment(product.createdAt).format(\"YYYY-MM-DD\")}\n        </Col>\n        <Col span=\"12\" style={{ textAlign: \"right\" }}>\n          所属分类: {product.category.name}\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProductItem\n","/**\n * 将商品添加到购物车\n */\n\nimport { Product } from \"../store/models/product\"\n\nexport interface CartItem extends Product {\n  count: number\n}\n\nexport const addItem = (item: Product, next: () => void) => {\n  let cart: CartItem[] = []\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\")!)\n    }\n    cart.push({\n      ...item,\n      count: 1\n    })\n  }\n  cart = Array.from(new Set(cart.map(item => item._id))).map(item => {\n    return cart.find(product => product._id === item)\n  }) as CartItem[]\n\n  localStorage.setItem(\"cart\", JSON.stringify(cart))\n\n  next()\n}\n\n/**\n * 获取本地购物车数据\n */\n\nexport const getCart = () => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\")!) as CartItem[]\n    }\n  }\n  return []\n}\n\n/**\n * 更改购物车中商品的数量\n */\nexport const updateItem = (productId: string, count: number) => {\n  let cart: CartItem[] = []\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\")!)\n    }\n    cart.forEach((item, index) => {\n      if (item._id === productId) {\n        cart[index].count = count\n      }\n    })\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n  }\n  return cart\n}\n\n/**\n * 删除购物车中的商品\n */\nexport const deleteItem = (productId: string) => {\n  let cart: CartItem[] = []\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\")!)\n    }\n    cart.forEach((item, index) => {\n      if (item._id === productId) {\n        cart.splice(index, 1)\n      }\n    })\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n  }\n  return cart\n}\n","import { Category } from \"../models/category\"\nexport const GET_CATEGORY = \"GET_CATEGORY\"\nexport const GET_CATEGORY_SUCCESS = \"GET_CATEGORY_SUCCESS\"\n\nexport interface GetCategoryAction {\n  type: typeof GET_CATEGORY\n}\n\nexport interface GetCategorySuccessAction {\n  type: typeof GET_CATEGORY_SUCCESS\n  payload: Category[]\n}\n\nexport const getCategory = (): GetCategoryAction => ({\n  type: GET_CATEGORY\n})\n\nexport const getCategorySuccess = (\n  payload: Category[]\n): GetCategorySuccessAction => ({\n  type: GET_CATEGORY_SUCCESS,\n  payload\n})\n\nexport type CategoryUnionType = GetCategoryAction | GetCategorySuccessAction\n","import { Product } from \"../models/product\"\nexport const GET_PRODUCT = \"GET_PRODUCT\"\nexport const GET_PRODUCT_SUCCESS = \"GET_PRODUCT_SUCCESS\"\n\n// sortBy=createdAt&order=asc&limit=10\n\nexport interface GetProductAction {\n  type: typeof GET_PRODUCT\n  sortBy: string\n  order: string\n  limit: number\n}\n\nexport interface GetProductSuccessAction {\n  type: typeof GET_PRODUCT_SUCCESS\n  payload: Product[]\n  sortBy: string\n}\n\nexport const getProduct = (\n  sortBy: string,\n  order: string = \"desc\",\n  limit: number = 10\n): GetProductAction => ({\n  type: GET_PRODUCT,\n  sortBy,\n  order,\n  limit\n})\n\nexport const getProductSuccess = (\n  payload: Product[],\n  sortBy: string\n): GetProductSuccessAction => ({\n  type: GET_PRODUCT_SUCCESS,\n  payload,\n  sortBy\n})\n\n/**\n * 搜索商品\n */\n\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\"\nexport const SEARCH_PRODUCT_SUCCESS = \"SEARCH_PRODUCT_SUCCESS\"\n\nexport interface SearchProductAction {\n  type: typeof SEARCH_PRODUCT\n  payload: {\n    category: string\n    search: string\n  }\n}\n\nexport interface SearchProductSuccessAction {\n  type: typeof SEARCH_PRODUCT_SUCCESS\n  products: Product[]\n}\n\nexport const searchProduct = (payload: {\n  category: string\n  search: string\n}): SearchProductAction => ({\n  type: SEARCH_PRODUCT,\n  payload\n})\n\nexport const SearchProductSuccess = (\n  products: Product[]\n): SearchProductSuccessAction => ({\n  type: SEARCH_PRODUCT_SUCCESS,\n  products\n})\n\n/**\n * 和筛选相关的action\n */\n\nexport const FILTER_PRODUCT = \"FILTER_PRODUCT\"\nexport const FILTER_PRODUCT_SUCCESS = \"FILTER_PRODUCT_SUCCESS\"\n\nexport interface FilterPayload {\n  order?: string\n  sortBy?: string\n  limit?: number\n  skip: number\n  filters?: {\n    category: string[]\n    price: number[]\n  }\n}\n\nexport interface FilterProductAction {\n  type: typeof FILTER_PRODUCT\n  payload: FilterPayload\n}\n\nexport interface FilterProductSuccessAction {\n  type: typeof FILTER_PRODUCT_SUCCESS\n  payload: {\n    size: number\n    data: Product[]\n  }\n  skip: number\n}\n\nexport const filterProduct = (\n  payload: FilterPayload\n): FilterProductAction => ({\n  type: FILTER_PRODUCT,\n  payload\n})\nexport const filterProductSuccess = (\n  payload: {\n    size: number\n    data: Product[]\n  },\n  skip: number\n): FilterProductSuccessAction => ({\n  type: FILTER_PRODUCT_SUCCESS,\n  payload,\n  skip\n})\n\n// 通过产品id获取产品详情\nexport const GET_PRODUCT_BY_ID = \"GET_PRODUCT_BY_ID\"\nexport const GET_PRODUCT_BY_ID_SUCCESS = \"GET_PRODUCT_BY_ID_SUCCESS\"\n\nexport interface GetProductByIdAction {\n  type: typeof GET_PRODUCT_BY_ID\n  payload: {\n    productId: string\n  }\n}\n\nexport interface GetProductByIdSuccessAction {\n  type: typeof GET_PRODUCT_BY_ID_SUCCESS\n  payload: Product\n}\n\nexport const getProductById = (payload: {\n  productId: string\n}): GetProductByIdAction => ({\n  type: GET_PRODUCT_BY_ID,\n  payload\n})\n\nexport const getProductByIdSuccess = (\n  payload: Product\n): GetProductByIdSuccessAction => ({\n  type: GET_PRODUCT_BY_ID_SUCCESS,\n  payload\n})\n\nexport type ProductUnionType =\n  | GetProductAction\n  | GetProductSuccessAction\n  | SearchProductAction\n  | SearchProductSuccessAction\n  | FilterProductAction\n  | FilterProductSuccessAction\n  | GetProductByIdAction\n  | GetProductByIdSuccessAction\n","import { Button, Col, Divider, Form, Input, Row, Select } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport ProductItem from \"./ProductItem\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCategory } from \"../../store/actions/category.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { CategoryState } from \"../../store/reducers/category.reducer\"\nimport { searchProduct } from \"../../store/actions/product.actions\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\n\nconst Search = () => {\n  const dispatch = useDispatch()\n\n  const { category } = useSelector<AppState, CategoryState>(\n    state => state.category\n  )\n\n  const { search } = useSelector<AppState, ProductState>(\n    state => state.product\n  )\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const onFinish = (value: { category: string; search: string }) => {\n    dispatch(\n      searchProduct({ category: value.category, search: value.search })\n    )\n  }\n\n  return (\n    <>\n      <Form\n        onFinish={onFinish}\n        layout=\"inline\"\n        initialValues={{ category: \"All\" }}\n      >\n        <Input.Group compact>\n          <Form.Item name=\"category\">\n            <Select>\n              <Select.Option value=\"All\">所有分类</Select.Option>\n              {category.result.map(item => (\n                <Select.Option key={item._id} value={item._id}>\n                  {item.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"search\">\n            <Input placeholder=\"请输入搜索关键字\" />\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\">搜索</Button>\n          </Form.Item>\n        </Input.Group>\n      </Form>\n      <Divider />\n      <Row gutter={[16, 16]}>\n        {search.map(item => (\n          <Col span=\"6\">\n            <ProductItem product={item} />\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Search\n","import { Col, Row, Typography } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport Layout from \"./Layout\"\nimport ProductItem from \"./ProductItem\"\nimport Search from \"./Search\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getProduct } from \"../../store/actions/product.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\n\nconst { Title } = Typography\n\nconst Home = () => {\n  const dispatch = useDispatch()\n\n  const { createdAt, sold } = useSelector<AppState, ProductState>(\n    state => state.product\n  )\n\n  useEffect(() => {\n    dispatch(getProduct(\"createdAt\"))\n    dispatch(getProduct(\"sold\"))\n  }, [])\n\n  return (\n    <Layout title=\"拉勾电商\" subTitle=\"欢迎来到拉勾电商, 尽情享受吧\">\n      <Search />\n      <Title level={5}>最新上架</Title>\n      <Row gutter={[16, 16]}>\n        {createdAt.products.map(item => (\n          <Col key={item._id} span=\"6\">\n            <ProductItem product={item} />\n          </Col>\n        ))}\n      </Row>\n      <Title level={5}>最受欢迎</Title>\n      <Row gutter={[16, 16]}>\n        {sold.products.map(item => (\n          <Col key={item._id} span=\"6\">\n            <ProductItem product={item} />\n          </Col>\n        ))}\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Home\n","import React, { useEffect, FC } from \"react\"\nimport { List, Typography, Checkbox as AntdCheckbox } from \"antd\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCategory } from \"../../store/actions/category.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { CategoryState } from \"../../store/reducers/category.reducer\"\nimport { CheckboxValueType } from \"antd/lib/checkbox/Group\"\n\nconst { Title } = Typography\n\ninterface Props {\n  handleFilter: (arg: string[]) => void\n}\n\nconst Checkbox: FC<Props> = ({ handleFilter }) => {\n  const dispatch = useDispatch()\n\n  const category = useSelector<AppState, CategoryState>(\n    state => state.category\n  )\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const onChange = (checkedValue: CheckboxValueType[]) => {\n    handleFilter(checkedValue as string[])\n  }\n\n  return (\n    <>\n      <Title level={4}>按照分类筛选</Title>\n      <AntdCheckbox.Group\n        className=\"checkBoxFilter\"\n        options={category.category.result.map(item => ({\n          label: item.name,\n          value: item._id\n        }))}\n        onChange={onChange}\n      />\n    </>\n  )\n}\n\nexport default Checkbox\n","import { Price } from \"../store/models/product\"\n\nconst prices: Price[] = [\n  {\n    id: 0,\n    name: \"不限制价格\",\n    array: []\n  },\n  {\n    id: 1,\n    name: \"1 - 50\",\n    array: [1, 50]\n  },\n  {\n    id: 2,\n    name: \"51 - 100\",\n    array: [51, 100]\n  },\n  {\n    id: 3,\n    name: \"101 - 150\",\n    array: [101, 150]\n  },\n  {\n    id: 4,\n    name: \"151 - 200\",\n    array: [151, 200]\n  },\n  {\n    id: 5,\n    name: \"201 - 500\",\n    array: [201, 500]\n  }\n]\n\nexport default prices\n","import React, { FC } from \"react\"\n\nimport { List, Radio, Typography } from \"antd\"\nimport prices from \"../../helpers/price\"\nimport { RadioChangeEvent } from \"antd/lib/radio\"\n\nconst { Title } = Typography\n\ninterface Props {\n  handleFilter: (arg: number[]) => void\n}\n\nconst RadioBox: FC<Props> = ({ handleFilter }) => {\n  const onChange = (event: RadioChangeEvent) => {\n    handleFilter(event.target.value)\n  }\n\n  return (\n    <>\n      <Title level={4}>按照价格筛选</Title>\n      <Radio.Group>\n        <List\n          dataSource={prices}\n          renderItem={item => (\n            <List.Item>\n              <Radio onChange={onChange} value={item.array}>\n                {item.name}\n              </Radio>\n            </List.Item>\n          )}\n        />\n      </Radio.Group>\n    </>\n  )\n}\n\nexport default RadioBox\n","import { Button, Col, Empty, Row, Space } from \"antd\"\nimport React, { useState, useEffect } from \"react\"\nimport Checkbox from \"./CheckBox\"\nimport Layout from \"./Layout\"\nimport RadioBox from \"./RadioBox\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { filterProduct } from \"../../store/actions/product.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\nimport ProductItem from \"./ProductItem\"\n\nconst Shop = () => {\n  const dispatch = useDispatch()\n\n  const [skip, setSkip] = useState<number>(0)\n\n  const product = useSelector<AppState, ProductState>(state => state.product)\n\n  const [myFilters, setMyFilter] = useState<{\n    category: string[]\n    price: number[]\n  }>({ category: [], price: [] })\n\n  useEffect(() => {\n    setSkip(0)\n  }, [myFilters])\n\n  useEffect(() => {\n    dispatch(filterProduct({ filters: myFilters, skip }))\n  }, [myFilters, skip])\n\n  const filterDOM = () => (\n    <Space size=\"middle\" direction=\"vertical\">\n      <Checkbox\n        handleFilter={(filters: string[]) => {\n          setMyFilter({ ...myFilters, category: filters })\n        }}\n      />\n      <RadioBox\n        handleFilter={(filters: number[]) => {\n          setMyFilter({ ...myFilters, price: filters })\n        }}\n      />\n    </Space>\n  )\n\n  const productDOM = () => (\n    <Row gutter={[16, 16]}>\n      {product.filter.result.data.map(item => (\n        <Col key={item._id} span=\"6\">\n          <ProductItem product={item} />\n        </Col>\n      ))}\n    </Row>\n  )\n\n  const loadMoreButton = () => {\n    return (\n      <Row>\n        {product.filter.result.size >= 4 && (\n          <Button onClick={loadMore}>加载更多</Button>\n        )}\n      </Row>\n    )\n  }\n\n  const loadMore = () => {\n    setSkip(skip + 4)\n  }\n\n  const noData = () => {\n    return <Row>{product.filter.result.size === 0 && <Empty />}</Row>\n  }\n\n  return (\n    <Layout title=\"拉勾商城\" subTitle=\"挑选你喜欢的商品吧\">\n      <Row>\n        <Col span=\"4\">{filterDOM()}</Col>\n        <Col span=\"20\">\n          {productDOM()} {loadMoreButton()} {noData()}\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Shop\n","/**\n * 注册\n */\nexport const SIGNUP = \"SIGNUP\"\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\"\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\"\nexport const RESET_SIGNUP = \"RESET_SIGNUP\"\n\nexport interface SignupPayload {\n  email: string\n  name: string\n  password: string\n}\n\nexport interface SignupAction {\n  type: typeof SIGNUP\n  payload: SignupPayload\n}\n\nexport interface SignupSuccessAction {\n  type: typeof SIGNUP_SUCCESS\n}\n\nexport interface SignupFailAction {\n  type: typeof SIGNUP_FAIL\n  message: string\n}\n\nexport interface ResetSignupAction {\n  type: typeof RESET_SIGNUP\n}\n\nexport const signup = (payload: SignupPayload): SignupAction => ({\n  type: SIGNUP,\n  payload\n})\n\nexport const signupSuccess = (): SignupSuccessAction => ({\n  type: SIGNUP_SUCCESS\n})\n\nexport const signupFail = (message: string): SignupFailAction => ({\n  type: SIGNUP_FAIL,\n  message\n})\n\nexport const resetSignup = (): ResetSignupAction => ({\n  type: RESET_SIGNUP\n})\n\n/**\n * 登录\n */\n\nexport const SIGNIN = \"SIGNIN\"\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\"\nexport const SIGNIN_FAIL = \"SIGNIN_FAIL\"\n\nexport interface SigninPayload {\n  email: string\n  password: string\n}\n\nexport interface SigninAction {\n  type: typeof SIGNIN\n  payload: SigninPayload\n}\n\nexport interface SigninSuccessAction {\n  type: typeof SIGNIN_SUCCESS\n}\n\nexport interface SigninFailAction {\n  type: typeof SIGNIN_FAIL\n  message: string\n}\n\nexport const signin = (payload: SigninPayload): SigninAction => ({\n  type: SIGNIN,\n  payload\n})\n\nexport const signinSuccess = (): SigninSuccessAction => ({\n  type: SIGNIN_SUCCESS\n})\n\nexport const signinFail = (message: string): SigninFailAction => ({\n  type: SIGNIN_FAIL,\n  message\n})\n\nexport type AuthUnionType =\n  | SignupAction\n  | SignupSuccessAction\n  | SignupFailAction\n  | ResetSignupAction\n  | SigninAction\n  | SigninSuccessAction\n  | SigninFailAction\n","import { Button, Form, Input, Result } from \"antd\"\nimport React from \"react\"\nimport Layout from \"./Layout\"\nimport { signin, SigninPayload } from \"../../store/actions/auth.actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { AuthState } from \"../../store/reducers/auth.reducer\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\nimport { Redirect } from \"react-router-dom\"\n\nconst Signin = () => {\n  // 获取 dispatch\n  const dispatch = useDispatch()\n  // 登录表单提交\n  const onFinish = (value: SigninPayload) => {\n    // 发送登录请求\n    dispatch(signin(value))\n  }\n  // 1. 获取登录结果\n  const auth = useSelector<AppState, AuthState>(state => state.auth)\n  // 2. 登录失败 显示错误信息\n  const showError = () => {\n    if (auth.signin.loaded && !auth.signin.success) {\n      return (\n        <Result\n          status=\"warning\"\n          title=\"登录失败\"\n          subTitle={auth.signin.message}\n        />\n      )\n    }\n  }\n  // 3. 登录成功 根据角色跳转到对应的管理页面\n  const redirectToDashboard = () => {\n    const auth = isAuth()\n    if (auth) {\n      const {\n        user: { role }\n      } = auth as Jwt\n\n      if (role === 0) {\n        // 注册用户\n        return <Redirect to=\"/user/dashboard\" />\n      } else {\n        // 管理员\n        return <Redirect to=\"/admin/dashboard\" />\n      }\n    }\n  }\n\n  const signinForm = () => (\n    <Form onFinish={onFinish}>\n      <Form.Item name=\"email\" label=\"邮箱\">\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"password\" label=\"密码\">\n        <Input.Password />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          登录\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n  // 4. 处理导航链接 已登录 隐藏 [登录, 注册] 显示 [dashboard]\n  return (\n    <Layout title=\"登录\" subTitle=\"嘿, 小伙伴, 立即登录到拉钩电商系统吧\">\n      {showError()}\n      {redirectToDashboard()}\n      {signinForm()}\n    </Layout>\n  )\n}\n\nexport default Signin\n","import { Button, Form, Input, Result } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport Layout from \"./Layout\"\nimport {\n  SignupPayload,\n  signup,\n  resetSignup\n} from \"../../store/actions/auth.actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { AuthState } from \"../../store/reducers/auth.reducer\"\nimport { Link } from \"react-router-dom\"\n\nconst Signup = () => {\n  // 获取 dispatch 方法\n  const dispatch = useDispatch()\n  // 获取注册结果\n  const auth = useSelector<AppState, AuthState>(state => state.auth)\n\n  const [form] = Form.useForm()\n\n  // 注册表单提交\n  const onFinish = (value: SignupPayload) => {\n    // 发送注册请求\n    dispatch(signup(value))\n  }\n\n  // 1. 注册成功 清空表单\n  useEffect(() => {\n    if (auth.signup.loaded && auth.signup.success) {\n      form.resetFields()\n    }\n  }, [auth])\n\n  // 2. 注册成功 显示成功的提示信息\n  const showSuccess = () => {\n    if (auth.signup.loaded && auth.signup.success) {\n      return (\n        <Result\n          status=\"success\"\n          title=\"注册成功\"\n          extra={[\n            <Button type=\"primary\">\n              <Link to=\"/signin\">登录</Link>\n            </Button>\n          ]}\n        />\n      )\n    }\n  }\n  // 3. 注册失败 显示失败的提示信息\n  const showError = () => {\n    if (auth.signup.loaded && !auth.signup.success) {\n      return (\n        <Result\n          status=\"warning\"\n          title=\"注册失败\"\n          subTitle={auth.signup.message}\n        />\n      )\n    }\n  }\n  // 4. 离开页面之前 重置状态\n  useEffect(() => {\n    return () => {\n      dispatch(resetSignup())\n    }\n  }, [])\n\n  const signupForm = () => (\n    <Form form={form} onFinish={onFinish}>\n      <Form.Item name=\"name\" label=\"昵称\">\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"password\" label=\"密码\">\n        <Input.Password />\n      </Form.Item>\n      <Form.Item name=\"email\" label=\"邮箱\">\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"email\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          注册\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n\n  return (\n    <Layout title=\"注册\" subTitle=\"还没有账号? 注册一个吧.\">\n      {showSuccess()}\n      {showError()}\n      {signupForm()}\n    </Layout>\n  )\n}\n\nexport default Signup\n","import React from \"react\"\nimport Layout from \"../core/Layout\"\n\nconst Dashboard = () => {\n  return (\n    <Layout title=\"用户 Dashboard\" subTitle=\"\">\n      Dashboard\n    </Layout>\n  )\n}\n\nexport default Dashboard\n","import React, { FC } from \"react\"\nimport { Redirect, Route, RouteProps } from \"react-router-dom\"\nimport { isAuth } from \"../../helpers/auth\"\n\ninterface PrivateRouteProps extends RouteProps {\n  component: React.ComponentType<any>\n}\n\nconst PrivateRoute: FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        const auth = isAuth()\n        if (auth) {\n          return <Component {...props} />\n        }\n        return <Redirect to=\"/signin\" />\n      }}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import { Col, Menu, Row } from \"antd\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Layout from \"../core/Layout\"\nimport {\n  ShoppingCartOutlined,\n  UserOutlined,\n  OrderedListOutlined\n} from \"@ant-design/icons\"\n\nimport { Typography, Descriptions } from \"antd\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\nconst { Title } = Typography\n\nconst AdminDashboard = () => {\n  const {\n    user: { name, email }\n  } = isAuth() as Jwt\n\n  const adminLinks = () => (\n    <>\n      <Title level={5}>管理员链接</Title>\n      <Menu>\n        <Menu.Item>\n          <ShoppingCartOutlined />\n          <Link to=\"/create/category\">添加分类</Link>\n        </Menu.Item>\n        <Menu.Item>\n          <UserOutlined />\n          <Link to=\"/create/product\">添加产品</Link>\n        </Menu.Item>\n        <Menu.Item>\n          <OrderedListOutlined />\n          <Link to=\"\">订单列表</Link>\n        </Menu.Item>\n      </Menu>\n    </>\n  )\n\n  const adminInfo = () => (\n    <Descriptions title=\"管理员信息\" bordered>\n      <Descriptions.Item label=\"昵称\">{name}</Descriptions.Item>\n      <Descriptions.Item label=\"邮件\">{email}</Descriptions.Item>\n      <Descriptions.Item label=\"角色\">管理员</Descriptions.Item>\n    </Descriptions>\n  )\n\n  return (\n    <Layout title=\"管理员 Dashboard\" subTitle=\"\">\n      <Row>\n        <Col span=\"4\">{adminLinks()}</Col>\n        <Col span=\"20\">{adminInfo()}</Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default AdminDashboard\n","import React, { FC } from \"react\"\nimport { Redirect, Route, RouteProps } from \"react-router-dom\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\ninterface PrivateRouteProps extends RouteProps {\n  component: React.ComponentType<any>\n}\n\nconst AdminRoute: FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        const auth = isAuth()\n        if (auth) {\n          const {\n            user: { role }\n          } = auth as Jwt\n          if (role === 1) return <Component {...props} />\n        }\n        return <Redirect to=\"/signin\" />\n      }}\n    />\n  )\n}\n\nexport default AdminRoute\n","import { Button, Form, Input, message } from \"antd\"\nimport React, { useEffect, useState } from \"react\"\nimport Layout from \"../core/Layout\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\nimport { Link } from \"react-router-dom\"\n\nconst AddCategory = () => {\n  const [name, setName] = useState<string>(\"\")\n\n  const { user, token } = isAuth() as Jwt\n\n  useEffect(() => {\n    async function addCategory() {\n      try {\n        let response = await axios.post<{ name: string }>(\n          `${API}/category/create/${user._id}`,\n          {\n            name: name\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n        )\n        message.success(`[${response.data.name}] 分类添加成功`)\n      } catch (error) {\n        message.error(error.response.data.error)\n      }\n    }\n    if (name) {\n      addCategory()\n    }\n  }, [name])\n\n  const onFinish = (value: { name: string }) => {\n    console.log(value)\n    setName(value.name)\n  }\n  return (\n    <Layout title=\"添加分类\" subTitle=\"\">\n      <Form onFinish={onFinish}>\n        <Form.Item name=\"name\" label=\"分类名称\">\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            添加分类\n          </Button>\n        </Form.Item>\n      </Form>\n      <Button>\n        <Link to=\"/admin/dashboard\">返回 Dashboard</Link>\n      </Button>\n    </Layout>\n  )\n}\n\nexport default AddCategory\n","import { Button, Form, Input, message, Select, Upload } from \"antd\"\nimport { UploadOutlined } from \"@ant-design/icons\"\nimport React, { useEffect, useState } from \"react\"\nimport Layout from \"../core/Layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCategory } from \"../../store/actions/category.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { CategoryState } from \"../../store/reducers/category.reducer\"\nimport { RcFile } from \"antd/lib/upload\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\nconst AddProduct = () => {\n  const dispatch = useDispatch()\n  const [file, setFile] = useState<RcFile>()\n\n  const category = useSelector<AppState, CategoryState>(\n    state => state.category\n  )\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const { user, token } = isAuth() as Jwt\n\n  const onFinish = (product: any) => {\n    const formData = new FormData()\n    for (let attr in product) {\n      formData.set(attr, product[attr])\n    }\n    if (typeof file !== \"undefined\") {\n      formData.set(\"photo\", file)\n    }\n\n    axios\n      .post(`${API}/product/create/${user._id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(\n        () => {\n          message.success(\"商品添加成功\")\n        },\n        () => {\n          message.error(\"商品添加失败\")\n        }\n      )\n  }\n\n  const addProductForm = () => {\n    const props = {\n      accept: \"image/*\",\n      beforeUpload: function (file: RcFile) {\n        setFile(file)\n        return false\n      }\n    }\n    return (\n      <Form onFinish={onFinish} initialValues={{ category: \"\" }}>\n        <Form.Item>\n          <Upload {...props}>\n            <Button icon={<UploadOutlined />}>上传商品封面</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item name=\"name\" label=\"商品名称\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"description\" label=\"商品描述\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"price\" label=\"商品价格\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"category\" label=\"所属分类\">\n          <Select>\n            <Select.Option value=\"\">请选择分类</Select.Option>\n            {category.category.result.map(item => (\n              <Select.Option key={item._id} value={item._id}>\n                {item.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"quantity\" label=\"商品数量\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"shipping\" label=\"是否需要运输\">\n          <Select>\n            <Select.Option value=\"1\">是</Select.Option>\n            <Select.Option value=\"0\">否</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            添加商品\n          </Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n\n  return (\n    <Layout title=\"添加商品\" subTitle=\"\">\n      {addProductForm()}\n    </Layout>\n  )\n}\n\nexport default AddProduct\n","import { Col, Row } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport Layout from \"./Layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getProductById } from \"../../store/actions/product.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\nimport ProductItem from \"./ProductItem\"\n\nconst Product = () => {\n  const dispatch = useDispatch()\n  const { product } = useSelector<AppState, ProductState>(\n    state => state.product\n  )\n  const { productId } = useParams<{ productId: string }>()\n  useEffect(() => {\n    dispatch(getProductById({ productId }))\n  }, [])\n  return (\n    <Layout title=\"商品名称\" subTitle=\"商品描述\">\n      <Row gutter={36}>\n        <Col span=\"18\">\n          <ProductItem showViewProduct={false} product={product.result} />\n        </Col>\n        <Col span=\"6\">right</Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Product\n","import React, { ChangeEvent, FC, useState } from \"react\"\nimport { CartItem, updateItem, deleteItem } from \"../../helpers/cart\"\nimport { Button, Image, Input } from \"antd\"\nimport { API } from \"../../config\"\n\ninterface Props {\n  product: CartItem\n  setCart: (arg: CartItem[]) => void\n}\n\nconst CartItemFc: FC<Props> = ({ product, setCart }) => {\n  const [count, setCount] = useState<number>(product.count)\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    let count = parseInt(event.target.value)\n    setCart(updateItem(product._id, count))\n    setCount(count)\n  }\n  return (\n    <tr className=\"ant-table-row\">\n      <td className=\"ant-table-cell\">\n        <Image width={120} src={`${API}/product/photo/${product._id}`} />\n      </td>\n      <td className=\"ant-table-cell\">{product.name}</td>\n      <td className=\"ant-table-cell\">{product.price}</td>\n      <td className=\"ant-table-cell\">{product.category.name}</td>\n      <td className=\"ant-table-cell\">\n        <Input type=\"number\" value={count} onChange={handleChange} />\n      </td>\n      <td className=\"ant-table-cell\">\n        <Button\n          onClick={() => setCart(deleteItem(product._id))}\n          danger\n          type=\"primary\"\n        >\n          删除\n        </Button>\n      </td>\n    </tr>\n  )\n}\n\nexport default CartItemFc\n","import React, { FC, useEffect } from \"react\"\nimport { CartItem } from \"../../helpers/cart\"\nimport { Typography } from \"antd\"\n\nconst { Title } = Typography\n\ninterface Props {\n  cart: CartItem[]\n  setTotalPrice: (price: number) => void\n}\n\nconst TotalPrice: FC<Props> = ({ cart, setTotalPrice }) => {\n  const getTotalPrice = () => {\n    console.log(cart)\n    return cart\n      .reduce((currentValue, nextValue) => {\n        return (currentValue += nextValue.price * nextValue.count)\n      }, 0)\n      .toFixed(2)\n  }\n\n  useEffect(() => {\n    setTotalPrice(parseFloat(getTotalPrice()))\n  }, [cart])\n\n  return <Title level={5}>商品总价: {getTotalPrice()}</Title>\n}\n\nexport default TotalPrice\n","import { Button } from \"antd\"\nimport React, { FC } from \"react\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Link } from \"react-router-dom\"\nimport { CartItem } from \"../../helpers/cart\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { Jwt } from \"../../store/models/auth\"\n\ninterface Props {\n  totalPrice: number\n  address: string\n  cart: CartItem[]\n}\n\nconst Pay: FC<Props> = ({ totalPrice, address, cart }) => {\n  const getPayUrl = () => {\n    axios\n      .post(`${API}/alipay`, {\n        totalAmount: totalPrice,\n        subject: \"测试订单标题\",\n        body: \"测试订单描述\",\n        products: cart.map(product => ({\n          count: product.count,\n          product: product._id\n        })),\n        address: address,\n        userId: (isAuth() as Jwt).user._id\n      })\n      .then(response => {\n        window.location.href = response.data.result\n      })\n  }\n\n  const showButton = () => {\n    return isAuth() ? (\n      <Button onClick={getPayUrl}>提交订单</Button>\n    ) : (\n      <Button>\n        <Link to=\"/signin\">登录</Link>\n      </Button>\n    )\n  }\n\n  return <>{showButton()}</>\n}\n\nexport default Pay\n","import React, { useState, useEffect, ChangeEvent } from \"react\"\nimport Layout from \"./Layout\"\nimport { CartItem, getCart } from \"../../helpers/cart\"\nimport { Col, Divider, Input, Row } from \"antd\"\nimport CartItemFc from \"./CartItemFc\"\nimport TotalPrice from \"./TotalPrice\"\nimport Pay from \"./Pay\"\n\nconst Cart = () => {\n  const [cart, setCart] = useState<CartItem[]>([])\n  const [address, setAddress] = useState<string>(\"\")\n  const [totalPrice, setTotalPrice] = useState<number>(() => {\n    return 0\n  })\n\n  useEffect(() => {\n    setCart(getCart())\n  }, [])\n\n  const showCart = () => (\n    <table style={{ width: \"100%\" }}>\n      <thead className=\"ant-table-thead\">\n        <tr>\n          <th className=\"ant-table-cell\">商品封面</th>\n          <th className=\"ant-table-cell\">商品名称</th>\n          <th className=\"ant-table-cell\">商品价格</th>\n          <th className=\"ant-table-cell\">商品分类</th>\n          <th className=\"ant-table-cell\">商品数量</th>\n          <th className=\"ant-table-cell\">操作</th>\n        </tr>\n      </thead>\n      <tbody className=\"ant-table-tbody\">\n        {cart.map(item => (\n          <CartItemFc setCart={setCart} product={item} />\n        ))}\n      </tbody>\n    </table>\n  )\n\n  return (\n    <Layout title=\"购物车\" subTitle=\"付款吧, 我就是你的了\">\n      <Row gutter={16}>\n        <Col span=\"16\">{showCart()}</Col>\n        <Col span=\"8\">\n          <Row>\n            <Input\n              value={address}\n              onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                setAddress(event.target.value)\n              }\n              placeholder=\"请输入收货地址\"\n            />\n          </Row>\n          <Divider />\n          <Row>\n            <TotalPrice cart={cart} setTotalPrice={setTotalPrice} />\n          </Row>\n          <Row>\n            <Pay totalPrice={totalPrice} cart={cart} address={address} />\n          </Row>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Cart\n","import { Button } from \"antd\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Layout from \"./Layout\"\n\nconst Success = () => {\n  return (\n    <Layout title=\"支付完成\" subTitle=\"\">\n      <Button>\n        <Link to=\"/\">继续购物</Link>\n      </Button>\n    </Layout>\n  )\n}\n\nexport default Success\n","import React from \"react\"\nimport { HashRouter, Route, Switch } from \"react-router-dom\"\nimport Home from \"./components/core/Home\"\nimport Shop from \"./components/core/Shop\"\nimport Signin from \"./components/core/Signin\"\nimport Signup from \"./components/core/Signup\"\nimport Dashboard from \"./components/admin/Dashboard\"\nimport PrivateRoute from \"./components/admin/PrivateRoute\"\nimport AdminDashboard from \"./components/admin/AdminDashboard\"\nimport AdminRoute from \"./components/admin/AdminRoute\"\nimport AddCategory from \"./components/admin/AddCategory\"\nimport AddProduct from \"./components/admin/AddProduct\"\nimport Product from \"./components/core/Product\"\nimport Cart from \"./components/core/Cart\"\nimport Success from \"./components/core/Success\"\n\nconst Routes = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/shop\" component={Shop} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/cart\" component={Cart} />\n        <Route path=\"/paysuccess\" component={Success} />\n        <PrivateRoute path=\"/user/dashboard\" component={Dashboard} />\n        <AdminRoute path=\"/admin/dashboard\" component={AdminDashboard} />\n        <AdminRoute path=\"/create/category\" component={AddCategory} />\n        <AdminRoute path=\"/create/product\" component={AddProduct} />\n        <Route path=\"/product/:productId\" component={Product} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default Routes\n","import {\n  RESET_SIGNUP,\n  SIGNIN,\n  SIGNIN_SUCCESS,\n  SIGNIN_FAIL\n} from \"../actions/auth.actions\"\n\nimport {\n  AuthUnionType,\n  SIGNUP,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL\n} from \"../actions/auth.actions\"\n\nexport interface AuthState {\n  signup: {\n    loaded: boolean\n    success: boolean\n    message: string\n  }\n  signin: {\n    loaded: boolean\n    success: boolean\n    message: string\n  }\n}\n\nconst intialState: AuthState = {\n  signup: {\n    loaded: false,\n    success: false,\n    message: \"\"\n  },\n  signin: {\n    loaded: false,\n    success: false,\n    message: \"\"\n  }\n}\n\nexport default function authReducer(\n  state = intialState,\n  action: AuthUnionType\n) {\n  switch (action.type) {\n    case SIGNUP:\n      return {\n        ...state,\n        signup: {\n          loaded: false,\n          success: false\n        }\n      }\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signup: {\n          loaded: true,\n          success: true\n        }\n      }\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        signup: {\n          loaded: true,\n          success: false,\n          message: action.message\n        }\n      }\n    case RESET_SIGNUP:\n      return {\n        ...state,\n        signup: {\n          loaded: false,\n          success: false,\n          message: \"\"\n        }\n      }\n    case SIGNIN:\n      return {\n        ...state,\n        signin: {\n          loaded: false,\n          success: false,\n          message: \"\"\n        }\n      }\n    case SIGNIN_SUCCESS:\n      return {\n        ...state,\n        signin: {\n          loaded: true,\n          success: true,\n          message: \"\"\n        }\n      }\n    case SIGNIN_FAIL:\n      return {\n        ...state,\n        signin: {\n          loaded: true,\n          success: false,\n          message: action.message\n        }\n      }\n    default:\n      return state\n  }\n}\n","import {\n  CategoryUnionType,\n  GET_CATEGORY,\n  GET_CATEGORY_SUCCESS\n} from \"../actions/category.actions\"\nimport { Category } from \"../models/category\"\n\nexport interface CategoryState {\n  category: {\n    loaded: boolean\n    success: boolean\n    result: Category[]\n  }\n}\n\nconst initialState: CategoryState = {\n  category: {\n    loaded: false,\n    success: false,\n    result: []\n  }\n}\n\nexport default function categoryReducer(\n  state = initialState,\n  action: CategoryUnionType\n) {\n  switch (action.type) {\n    case GET_CATEGORY:\n      return {\n        ...state,\n        category: {\n          loaded: false,\n          success: false,\n          result: []\n        }\n      }\n    case GET_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        category: {\n          loaded: true,\n          success: true,\n          result: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ProductUnionType,\n  GET_PRODUCT,\n  GET_PRODUCT_SUCCESS\n} from \"../actions/product.actions\"\nimport { Product } from \"../models/product\"\nimport { GET_PRODUCT_BY_ID_SUCCESS } from \"../actions/product.actions\"\nimport {\n  FILTER_PRODUCT_SUCCESS,\n  GET_PRODUCT_BY_ID\n} from \"../actions/product.actions\"\nimport {\n  SEARCH_PRODUCT_SUCCESS,\n  FILTER_PRODUCT\n} from \"../actions/product.actions\"\n\nexport interface ProductState {\n  createdAt: {\n    loaded: boolean\n    success: boolean\n    products: Product[]\n  }\n  sold: {\n    loaded: boolean\n    success: boolean\n    products: Product[]\n  }\n  search: Product[]\n  filter: {\n    loaded: boolean\n    success: boolean\n    result: {\n      size: number\n      data: Product[]\n    }\n  }\n  product: {\n    loaded: boolean\n    success: boolean\n    result: Product\n  }\n}\n\nconst initialState: ProductState = {\n  createdAt: {\n    loaded: false,\n    success: false,\n    products: []\n  },\n  sold: {\n    loaded: false,\n    success: false,\n    products: []\n  },\n  search: [],\n  filter: {\n    success: false,\n    loaded: false,\n    result: {\n      size: 0,\n      data: []\n    }\n  },\n  product: {\n    loaded: false,\n    success: false,\n    result: {\n      _id: \"\",\n      name: \"\",\n      price: 0,\n      description: \"\",\n      category: {\n        _id: \"\",\n        name: \"\"\n      },\n      quantity: 0,\n      sold: 0,\n      photo: new FormData(),\n      shipping: false,\n      createdAt: \"\"\n    }\n  }\n}\n\nexport default function productReducer(\n  state = initialState,\n  action: ProductUnionType\n) {\n  switch (action.type) {\n    case GET_PRODUCT:\n      return {\n        ...state,\n        [action.sortBy]: {\n          ...state[action.sortBy === \"createdAt\" ? \"createdAt\" : \"sold\"],\n          loaded: false,\n          success: false\n        }\n      }\n    case GET_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        [action.sortBy]: {\n          loaded: true,\n          success: true,\n          products: action.payload\n        }\n      }\n    case SEARCH_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        search: action.products\n      }\n    case FILTER_PRODUCT:\n      return {\n        ...state,\n        filter: {\n          loaded: false,\n          success: false,\n          result: {\n            size: 0,\n            data: state.filter.result.data\n          }\n        }\n      }\n    case FILTER_PRODUCT_SUCCESS:\n      let data =\n        action.skip === 0\n          ? action.payload.data\n          : [...state.filter.result.data, ...action.payload.data]\n\n      return {\n        ...state,\n        filter: {\n          loaded: true,\n          success: true,\n          result: {\n            size: action.payload.size,\n            data\n          }\n        }\n      }\n    case GET_PRODUCT_BY_ID:\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          loaded: false,\n          success: false\n        }\n      }\n    case GET_PRODUCT_BY_ID_SUCCESS: {\n      return {\n        ...state,\n        product: {\n          loaded: true,\n          success: true,\n          result: action.payload\n        }\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { connectRouter, RouterState } from \"connected-react-router\"\nimport { combineReducers } from \"redux\"\nimport { History } from \"history\"\nimport authReducer from \"./auth.reducer\"\nimport { AuthState } from \"./auth.reducer\"\nimport categoryReducer from \"./category.reducer\"\nimport { CategoryState } from \"./category.reducer\"\nimport productReducer from \"./product.reducer\"\nimport { ProductState } from \"./product.reducer\"\n\nexport interface AppState {\n  router: RouterState\n  auth: AuthState\n  category: CategoryState\n  product: ProductState\n}\n\nconst createRootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n    category: categoryReducer,\n    product: productReducer\n  })\n\nexport default createRootReducer\n","import { put, takeEvery } from \"redux-saga/effects\"\nimport {\n  SIGNUP,\n  SignupAction,\n  signupSuccess,\n  signupFail\n} from \"../actions/auth.actions\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport {\n  SIGNIN,\n  SigninAction,\n  signinSuccess,\n  signinFail\n} from \"../actions/auth.actions\"\n\nfunction* hanleSignup(action: SignupAction) {\n  try {\n    yield axios.post(`${API}/signup`, action.payload)\n    yield put(signupSuccess())\n  } catch (error) {\n    yield put(signupFail(error.response.data.error))\n  }\n}\n\nfunction* handleSignin(action: SigninAction) {\n  try {\n    let response = yield axios.post(`${API}/signin`, action.payload)\n    localStorage.setItem(\"jwt\", JSON.stringify(response.data))\n    yield put(signinSuccess())\n  } catch (error) {\n    yield put(signinFail(error.response.data.error))\n  }\n}\n\nexport default function* authSaga() {\n  // 注册\n  yield takeEvery(SIGNUP, hanleSignup)\n  // 登录\n  yield takeEvery(SIGNIN, handleSignin)\n}\n","import { takeEvery, put } from \"redux-saga/effects\"\nimport { GET_CATEGORY, getCategorySuccess } from \"../actions/category.actions\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { Category } from \"../models/category\"\n\nfunction* handleGetCategory() {\n  let response = yield axios.get<Category[]>(`${API}/categories`)\n  yield put(getCategorySuccess(response.data))\n}\n\nexport default function* categorySaga() {\n  // 获取分类列表\n  yield takeEvery(GET_CATEGORY, handleGetCategory)\n}\n","import { put, take, takeEvery } from \"redux-saga/effects\"\nimport {\n  GET_PRODUCT,\n  GetProductAction,\n  getProductSuccess\n} from \"../actions/product.actions\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { Product } from \"../models/product\"\nimport { getProductByIdSuccess } from \"../actions/product.actions\"\nimport {\n  GET_PRODUCT_BY_ID,\n  GetProductByIdAction\n} from \"../actions/product.actions\"\nimport {\n  FilterProductAction,\n  filterProductSuccess\n} from \"../actions/product.actions\"\nimport {\n  SearchProductSuccess,\n  FILTER_PRODUCT\n} from \"../actions/product.actions\"\nimport {\n  SEARCH_PRODUCT,\n  SearchProductAction\n} from \"../actions/product.actions\"\n\n// /products?sortBy=createdAt&order=asc&limit=10\nfunction* handleGetProduct({ sortBy, order, limit }: GetProductAction) {\n  let response = yield axios.get<Product[]>(`${API}/products`, {\n    params: { sortBy, order, limit }\n  })\n  yield put(getProductSuccess(response.data, sortBy))\n}\n\nfunction* handleSearchProduct({\n  payload: { search, category }\n}: SearchProductAction) {\n  let response = yield axios.get(`${API}/products/search`, {\n    params: { search, category }\n  })\n  yield put(SearchProductSuccess(response.data))\n}\n\nfunction* handleFilterProduct(action: FilterProductAction) {\n  let response = yield axios.post(`${API}/products/filter`, action.payload)\n  yield put(filterProductSuccess(response.data, action.payload.skip))\n}\n\nfunction* handleGetProductById({ payload }: GetProductByIdAction) {\n  let response = yield axios.get(`${API}/product/${payload.productId}`)\n  yield put(getProductByIdSuccess(response.data))\n}\n\nexport default function* productSaga() {\n  yield takeEvery(GET_PRODUCT, handleGetProduct)\n  yield takeEvery(SEARCH_PRODUCT, handleSearchProduct)\n  yield takeEvery(FILTER_PRODUCT, handleFilterProduct)\n  yield takeEvery(GET_PRODUCT_BY_ID, handleGetProductById)\n}\n","import { all } from \"redux-saga/effects\"\nimport authSaga from \"./auth.saga\"\nimport categorySaga from \"./category.saga\"\nimport productSaga from \"./product.saga\"\n\nexport default function* rootSaga() {\n  yield all([authSaga(), categorySaga(), productSaga()])\n}\n","import { applyMiddleware, createStore } from \"redux\"\nimport createRootReducer from \"./reducers/index\"\nimport { createHashHistory } from \"history\"\nimport { routerMiddleware } from \"connected-react-router\"\nimport createSagaMiddleware from \"redux-saga\"\nimport rootSaga from \"./sagas/index\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\nexport const history = createHashHistory()\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(\n    applyMiddleware(routerMiddleware(history), sagaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { ConnectedRouter } from \"connected-react-router\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport Routes from \"./Routes\"\nimport store from \"./store/index\"\nimport { history } from \"./store\"\nimport \"./style.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Routes />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}